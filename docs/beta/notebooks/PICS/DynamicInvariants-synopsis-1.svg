<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.0.2 (20221119.0110)
 -->
<!-- Pages: 1 -->
<svg width="487pt" height="515pt"
 viewBox="0.00 0.00 486.50 515.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 511)">
<g id="a_graph0"><a xlink:title="TypeAnnotator class hierarchy">
<polygon fill="white" stroke="none" points="-4,4 -4,-511 482.5,-511 482.5,4 -4,4"/>
</a>
</g>
<!-- TypeAnnotator -->
<g id="node1" class="node">
<title>TypeAnnotator</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class TypeAnnotator:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="0,-6 0,-92 143,-92 143,-6 0,-6"/>
<text text-anchor="start" x="24" y="-77.8" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">TypeAnnotator</text>
<polyline fill="none" stroke="black" points="0,-69 143,-69"/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="TypeAnnotator">
<g id="a_node1_1"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;String representation, like `typed_functions()`">
<text text-anchor="start" x="8.5" y="-57.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="typed_function(self, function_name: str) &#45;&gt; str:&#10;Return the code for all calls of `function_name` observed, annotated with types">
<text text-anchor="start" x="8.5" y="-46.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_function()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="typed_function_ast(self, function_name: str) &#45;&gt; Optional[ast.AST]:&#10;Return an AST for all calls of `function_name` observed, annotated with types">
<text text-anchor="start" x="8.5" y="-35.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_function_ast()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="typed_functions(self) &#45;&gt; str:&#10;Return the code for all functions observed, annotated with types">
<text text-anchor="start" x="8.5" y="-24.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_functions()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="typed_functions_ast(self) &#45;&gt; Dict[str, ast.AST]:&#10;Return a dict name &#45;&gt; AST for all functions observed, annotated with types">
<text text-anchor="start" x="8.5" y="-13.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_functions_ast()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- TypeTracer -->
<g id="node2" class="node">
<title>TypeTracer</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class TypeTracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="58.5,-148.5 58.5,-184.5 144.5,-184.5 144.5,-148.5 58.5,-148.5"/>
<text text-anchor="start" x="66.5" y="-163.8" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">TypeTracer</text>
</a>
</g>
</g>
<!-- TypeAnnotator&#45;&gt;TypeTracer -->
<g id="edge1" class="edge">
<title>TypeAnnotator&#45;&gt;TypeTracer</title>
<path fill="none" stroke="black" d="M82.33,-91.7C86.32,-107.04 90.73,-124.03 94.32,-137.84"/>
<polygon fill="none" stroke="black" points="90.82,-138.32 96.73,-147.12 97.6,-136.56 90.82,-138.32"/>
</g>
<!-- CallTracer -->
<g id="node3" class="node">
<title>CallTracer</title>
<g id="a_node3"><a xlink:href="#" xlink:title="class CallTracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="110,-235.5 110,-354.5 211,-354.5 211,-235.5 110,-235.5"/>
<text text-anchor="start" x="129" y="-340.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">CallTracer</text>
<polyline fill="none" stroke="black" points="110,-331.5 211,-331.5"/>
<g id="a_node3_6"><a xlink:href="#" xlink:title="CallTracer">
<g id="a_node3_7"><a xlink:href="#" xlink:title="__init__(self, log: bool = False, **kwargs: Any) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text text-anchor="start" x="118.5" y="-320.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node3_8"><a xlink:href="#" xlink:title="add_call(self, function_name: str, arguments: List[Tuple[str, Any]], return_value: Any = None) &#45;&gt; None:&#10;Add given call to list of calls">
<text text-anchor="start" x="118.5" y="-308.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">add_call()</text>
</a>
</g>
<g id="a_node3_9"><a xlink:href="#" xlink:title="all_calls(self) &#45;&gt; Dict[str, List[Tuple[List[Tuple[str, Any]], Any]]]:&#10;Return list of calls for function_name,&#10;or a mapping function_name &#45;&gt; calls for all functions tracked">
<text text-anchor="start" x="118.5" y="-297.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">all_calls()</text>
</a>
</g>
<g id="a_node3_10"><a xlink:href="#" xlink:title="calls(self, function_name: str) &#45;&gt; List[Tuple[List[Tuple[str, Any]], Any]]:&#10;Return list of calls for `function_name`.">
<text text-anchor="start" x="118.5" y="-286.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">calls()</text>
</a>
</g>
<g id="a_node3_11"><a xlink:href="#" xlink:title="reset(self) &#45;&gt; None">
<text text-anchor="start" x="118.5" y="-275.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">reset()</text>
</a>
</g>
<g id="a_node3_12"><a xlink:href="#" xlink:title="trace_call(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Save current function name and args on the stack">
<text text-anchor="start" x="118.5" y="-264.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">trace_call()</text>
</a>
</g>
<g id="a_node3_13"><a xlink:href="#" xlink:title="trace_return(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Get return value and store complete call with arguments and return value">
<text text-anchor="start" x="118.5" y="-253.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">trace_return()</text>
</a>
</g>
<g id="a_node3_14"><a xlink:href="#" xlink:title="traceit(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Tracking function: Record all calls and all args">
<text text-anchor="start" x="118.5" y="-243.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- TypeTracer&#45;&gt;CallTracer -->
<g id="edge2" class="edge">
<title>TypeTracer&#45;&gt;CallTracer</title>
<path fill="none" stroke="black" d="M109.33,-184.3C114.4,-195.16 121.37,-210.09 128.53,-225.45"/>
<polygon fill="none" stroke="black" points="125.2,-226.6 132.6,-234.19 131.55,-223.64 125.2,-226.6"/>
</g>
<!-- Tracer -->
<g id="node4" class="node">
<title>Tracer</title>
<g id="a_node4"><a xlink:href="Tracer.ipynb" xlink:title="class Tracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="132.5,-391.5 132.5,-427.5 188.5,-427.5 188.5,-391.5 132.5,-391.5"/>
<text text-anchor="start" x="140.5" y="-406.8" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Tracer</text>
</a>
</g>
</g>
<!-- CallTracer&#45;&gt;Tracer -->
<g id="edge3" class="edge">
<title>CallTracer&#45;&gt;Tracer</title>
<path fill="none" stroke="black" d="M160.5,-354.23C160.5,-363.34 160.5,-372.39 160.5,-380.4"/>
<polygon fill="none" stroke="black" points="157,-380.14 160.5,-390.14 164,-380.14 157,-380.14"/>
</g>
<!-- StackInspector -->
<g id="node5" class="node">
<title>StackInspector</title>
<g id="a_node5"><a xlink:href="StackInspector.ipynb" xlink:title="class StackInspector:&#10;Provide functions to inspect the stack">
<polygon fill="none" stroke="black" points="77,-464.5 77,-506.5 244,-506.5 244,-464.5 77,-464.5"/>
<text text-anchor="start" x="113.5" y="-492.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">StackInspector</text>
<polyline fill="none" stroke="black" points="77,-483.5 244,-483.5"/>
<g id="a_node5_15"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node5_16"><a xlink:href="StackInspector.ipynb" xlink:title="_generated_function_cache = {}">
<text text-anchor="start" x="85.5" y="-471" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">_generated_function_cache</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Tracer&#45;&gt;StackInspector -->
<g id="edge4" class="edge">
<title>Tracer&#45;&gt;StackInspector</title>
<path fill="none" stroke="black" d="M160.5,-427.29C160.5,-435 160.5,-444.4 160.5,-453.33"/>
<polygon fill="none" stroke="black" points="157,-453.11 160.5,-463.11 164,-453.11 157,-453.11"/>
</g>
<!-- InvariantAnnotator -->
<g id="node6" class="node">
<title>InvariantAnnotator</title>
<g id="a_node6"><a xlink:href="#" xlink:title="class InvariantAnnotator:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="161,-0.5 161,-97.5 340,-97.5 340,-0.5 161,-0.5"/>
<text text-anchor="start" x="193" y="-83.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">InvariantAnnotator</text>
<polyline fill="none" stroke="black" points="161,-74.5 340,-74.5"/>
<g id="a_node6_17"><a xlink:href="#" xlink:title="InvariantAnnotator">
<g id="a_node6_18"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;String representation, like `functions_with_invariants()`">
<text text-anchor="start" x="169.5" y="-63.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node6_19"><a xlink:href="#" xlink:title="function_with_invariants(self, function_name: str) &#45;&gt; str:&#10;Return the code of `function_name`, annotated with invariants">
<text text-anchor="start" x="169.5" y="-52.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">function_with_invariants()</text>
</a>
</g>
<g id="a_node6_20"><a xlink:href="#" xlink:title="functions_with_invariants(self) &#45;&gt; str:&#10;Return the code of all observed functions, annotated with invariants">
<text text-anchor="start" x="169.5" y="-41.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">functions_with_invariants()</text>
</a>
</g>
<g id="a_node6_21"><a xlink:href="#" xlink:title="postconditions(self, function_name: str) &#45;&gt; List[str]:&#10;Return a list of mined postconditions for `function_name`">
<text text-anchor="start" x="169.5" y="-30.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">postconditions()</text>
</a>
</g>
<g id="a_node6_22"><a xlink:href="#" xlink:title="preconditions(self, function_name: str) &#45;&gt; List[str]:&#10;Return a list of mined preconditions for `function_name`">
<text text-anchor="start" x="169.5" y="-19.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">preconditions()</text>
</a>
</g>
<g id="a_node6_23"><a xlink:href="#" xlink:title="params(self, function_name: str) &#45;&gt; str">
<text text-anchor="start" x="169.5" y="-7.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">params()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- InvariantTracer -->
<g id="node7" class="node">
<title>InvariantTracer</title>
<g id="a_node7"><a xlink:href="#" xlink:title="class InvariantTracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="178,-134.5 178,-198.5 291,-198.5 291,-134.5 178,-134.5"/>
<text text-anchor="start" x="189.5" y="-184.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">InvariantTracer</text>
<polyline fill="none" stroke="black" points="178,-175.5 291,-175.5"/>
<g id="a_node7_24"><a xlink:href="#" xlink:title="InvariantTracer">
<g id="a_node7_25"><a xlink:href="#" xlink:title="__init__(self, props: Optional[List[str]] = None, **kwargs: Any) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text text-anchor="start" x="186.5" y="-164" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node7_26"><a xlink:href="#" xlink:title="all_invariants(self) &#45;&gt; Dict[str, Set[Tuple[str, Tuple[str, ...]]]]">
<text text-anchor="start" x="186.5" y="-152" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">all_invariants()</text>
</a>
</g>
<g id="a_node7_27"><a xlink:href="#" xlink:title="invariants(self, function_name: str) &#45;&gt; Set[Tuple[str, Tuple[str, ...]]]">
<text text-anchor="start" x="186.5" y="-141" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">invariants()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- InvariantAnnotator&#45;&gt;InvariantTracer -->
<g id="edge5" class="edge">
<title>InvariantAnnotator&#45;&gt;InvariantTracer</title>
<path fill="none" stroke="black" d="M243.95,-97.31C242.75,-105.96 241.5,-114.94 240.33,-123.42"/>
<polygon fill="none" stroke="black" points="236.89,-122.73 238.99,-133.12 243.82,-123.69 236.89,-122.73"/>
</g>
<!-- InvariantTracer&#45;&gt;CallTracer -->
<g id="edge6" class="edge">
<title>InvariantTracer&#45;&gt;CallTracer</title>
<path fill="none" stroke="black" d="M216.4,-198.45C211.46,-206.89 205.9,-216.39 200.26,-226.04"/>
<polygon fill="none" stroke="black" points="197.4,-224 195.37,-234.39 203.44,-227.53 197.4,-224"/>
</g>
<!-- Legend -->
<g id="node8" class="node">
<title>Legend</title>
<text text-anchor="start" x="358.5" y="-66.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text text-anchor="start" x="358.5" y="-56.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="365.5" y="-56.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text text-anchor="start" x="358.5" y="-46.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="365.5" y="-46.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text text-anchor="start" x="358.5" y="-36.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="365.5" y="-36.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text text-anchor="start" x="358.5" y="-27.3" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
