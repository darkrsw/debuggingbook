<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.49.1 (20210923.0004)
 -->
<!-- Pages: 1 -->
<svg width="406pt" height="681pt"
 viewBox="0.00 0.00 405.50 681.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 677)">
<g id="a_graph0"><a xlink:title="CoverageCollector class hierarchy">
<polygon fill="white" stroke="transparent" points="-4,4 -4,-677 401.5,-677 401.5,4 -4,4"/>
</a>
</g>
<!-- CoverageCollector -->
<g id="node1" class="node">
<title>CoverageCollector</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class CoverageCollector:&#10;A class to record covered locations during execution.">
<polygon fill="none" stroke="black" points="127.5,-0.5 127.5,-86.5 261.5,-86.5 261.5,-0.5 127.5,-0.5"/>
<text text-anchor="start" x="135.5" y="-72.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">CoverageCollector</text>
<polyline fill="none" stroke="black" points="127.5,-63.5 261.5,-63.5 "/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="CoverageCollector">
<g id="a_node1_1"><a xlink:href="#" xlink:title="coverage(self) &#45;&gt; Set[Tuple[Callable, int]]:&#10;Return a set (function, lineno) with all locations covered.">
<text text-anchor="start" x="137.5" y="-52" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">coverage()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="covered_functions(self) &#45;&gt; Set[Callable]:&#10;Return a set with all functions covered.">
<text text-anchor="start" x="137.5" y="-41" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">covered_functions()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="events(self) &#45;&gt; Set[Tuple[str, int]]:&#10;Return the set of locations covered.&#10;Each location comes as a pair (`function_name`, `lineno`).">
<text text-anchor="start" x="137.5" y="-30" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">events()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="__init__(self) &#45;&gt; None:&#10;Constructor.">
<text text-anchor="start" x="137.5" y="-19" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="collect(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Save coverage for an observed event.">
<text text-anchor="start" x="137.5" y="-8" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">collect()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Collector -->
<g id="node2" class="node">
<title>Collector</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class Collector:&#10;A class to record events during execution.">
<polygon fill="none" stroke="black" points="17,-123.5 17,-308.5 160,-308.5 160,-123.5 17,-123.5"/>
<text text-anchor="start" x="60" y="-294.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Collector</text>
<polyline fill="none" stroke="black" points="17,-285.5 160,-285.5 "/>
<g id="a_node2_6"><a xlink:href="#" xlink:title="Collector">
<g id="a_node2_7"><a xlink:href="#" xlink:title="__init__(self) &#45;&gt; None:&#10;Constructor.">
<text text-anchor="start" x="25.5" y="-274.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node2_8"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;Return a string representation of the collector">
<text text-anchor="start" x="25.5" y="-263.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node2_9"><a xlink:href="#" xlink:title="args(self) &#45;&gt; Dict[str, Any]:&#10;Return a dict of argument names and values from the first call">
<text text-anchor="start" x="25.5" y="-252.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">args()</text>
</a>
</g>
<g id="a_node2_10"><a xlink:href="#" xlink:title="argstring(self) &#45;&gt; str:&#10;Return the list of arguments from the first call,&#10;as a printable string">
<text text-anchor="start" x="25.5" y="-241.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">argstring()</text>
</a>
</g>
<g id="a_node2_11"><a xlink:href="#" xlink:title="collect(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Collector function. To be overloaded in subclasses.">
<text text-anchor="start" x="25.5" y="-230.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">collect()</text>
</a>
</g>
<g id="a_node2_12"><a xlink:href="#" xlink:title="exception(self) &#45;&gt; Optional[Type]:&#10;Return the exception class from the first call,&#10;or None if no exception was raised.">
<text text-anchor="start" x="25.5" y="-219.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">exception()</text>
</a>
</g>
<g id="a_node2_13"><a xlink:href="#" xlink:title="function(self) &#45;&gt; Callable:&#10;Return the function from the first call, as a function object">
<text text-anchor="start" x="25.5" y="-208.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">function()</text>
</a>
</g>
<g id="a_node2_14"><a xlink:href="#" xlink:title="id(self) &#45;&gt; str:&#10;Return an identifier for the collector,&#10;created from the first call">
<text text-anchor="start" x="25.5" y="-197.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">id()</text>
</a>
</g>
<g id="a_node2_15"><a xlink:href="#" xlink:title="__exit__(self, exc_tp: Type, exc_value: BaseException, exc_traceback: traceback) &#45;&gt; Optional[bool]:&#10;Exit the `with` block.">
<text text-anchor="start" x="25.5" y="-186.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">__exit__()</text>
</a>
</g>
<g id="a_node2_16"><a xlink:href="#" xlink:title="add_items_to_ignore(self, items_to_ignore: List[Union[Type, Callable]]) &#45;&gt; None:&#10;Define additional classes and functions to ignore during collection&#10;(typically `Debugger` classes using these collectors).">
<text text-anchor="start" x="25.5" y="-174.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">add_items_to_ignore()</text>
</a>
</g>
<g id="a_node2_17"><a xlink:href="#" xlink:title="coverage(self) &#45;&gt; Set[Tuple[Callable, int]]:&#10;Return a set (function, lineno) with locations covered.&#10;To be overloaded in subclasses.">
<text text-anchor="start" x="25.5" y="-164.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">coverage()</text>
</a>
</g>
<g id="a_node2_18"><a xlink:href="#" xlink:title="covered_functions(self) &#45;&gt; Set[Callable]:&#10;Set of covered functions. To be overloaded in subclasses.">
<text text-anchor="start" x="25.5" y="-153.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">covered_functions()</text>
</a>
</g>
<g id="a_node2_19"><a xlink:href="#" xlink:title="events(self) &#45;&gt; Set:&#10;Return a collection of events. To be overridden in subclasses.">
<text text-anchor="start" x="25.5" y="-142.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">events()</text>
</a>
</g>
<g id="a_node2_20"><a xlink:href="#" xlink:title="traceit(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Tracing function.&#10;Saves the first function and calls collect().">
<text text-anchor="start" x="25.5" y="-131.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CoverageCollector&#45;&gt;Collector -->
<g id="edge1" class="edge">
<title>CoverageCollector&#45;&gt;Collector</title>
<path fill="none" stroke="black" d="M168.3,-86.65C162.89,-95.34 156.98,-104.85 150.9,-114.63"/>
<polygon fill="none" stroke="black" points="147.83,-112.94 145.52,-123.28 153.77,-116.64 147.83,-112.94"/>
</g>
<!-- StackInspector -->
<g id="node4" class="node">
<title>StackInspector</title>
<g id="a_node4"><a xlink:href="StackInspector.ipynb" xlink:title="class StackInspector:&#10;Provide functions to inspect the stack">
<polygon fill="none" stroke="black" points="58,-501.5 58,-672.5 225,-672.5 225,-501.5 58,-501.5"/>
<text text-anchor="start" x="95" y="-658.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">StackInspector</text>
<polyline fill="none" stroke="black" points="58,-649.5 225,-649.5 "/>
<g id="a_node4_21"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node4_22"><a xlink:href="StackInspector.ipynb" xlink:title="_generated_function_cache = {(&#39;remove_html_markup&#39;, 1): &lt;function remove_html_markup at 0x10cad1b80&gt;, (&#39;middle&#39;, 1): &lt;function middle at 0x10ccd48b0&gt;}">
<text text-anchor="start" x="66.5" y="-637" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">_generated_function_cache</text>
</a>
</g>
</a>
</g>
<polyline fill="none" stroke="black" points="58,-630.5 225,-630.5 "/>
<g id="a_node4_23"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node4_24"><a xlink:href="StackInspector.ipynb" xlink:title="caller_frame(self) &#45;&gt; frame:&#10;Return the frame of the caller.">
<text text-anchor="start" x="84.5" y="-618" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">caller_frame()</text>
</a>
</g>
<g id="a_node4_25"><a xlink:href="StackInspector.ipynb" xlink:title="caller_function(self) &#45;&gt; Callable:&#10;Return the calling function">
<text text-anchor="start" x="84.5" y="-607" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">caller_function()</text>
</a>
</g>
<g id="a_node4_26"><a xlink:href="StackInspector.ipynb" xlink:title="caller_globals(self) &#45;&gt; Dict[str, Any]:&#10;Return the globals() environment of the caller.">
<text text-anchor="start" x="84.5" y="-596" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">caller_globals()</text>
</a>
</g>
<g id="a_node4_27"><a xlink:href="StackInspector.ipynb" xlink:title="caller_locals(self) &#45;&gt; Dict[str, Any]:&#10;Return the locals() environment of the caller.">
<text text-anchor="start" x="84.5" y="-585" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">caller_locals()</text>
</a>
</g>
<g id="a_node4_28"><a xlink:href="StackInspector.ipynb" xlink:title="caller_location(self) &#45;&gt; Tuple[Callable, int]:&#10;Return the location (func, lineno) of the caller.">
<text text-anchor="start" x="84.5" y="-574" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">caller_location()</text>
</a>
</g>
<g id="a_node4_29"><a xlink:href="StackInspector.ipynb" xlink:title="create_function(self, frame: frame) &#45;&gt; Callable:&#10;Create function for given frame">
<text text-anchor="start" x="84.5" y="-563" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">create_function()</text>
</a>
</g>
<g id="a_node4_30"><a xlink:href="StackInspector.ipynb" xlink:title="is_internal_error(self, exc_tp: Type, exc_value: BaseException, exc_traceback: traceback) &#45;&gt; bool:&#10;Return True if exception was raised from `StackInspector` or a subclass.">
<text text-anchor="start" x="84.5" y="-552" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">is_internal_error()</text>
</a>
</g>
<g id="a_node4_31"><a xlink:href="StackInspector.ipynb" xlink:title="our_frame(self, frame: frame) &#45;&gt; bool:&#10;Return true if `frame` is in the current (inspecting) class.">
<text text-anchor="start" x="84.5" y="-541" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">our_frame()</text>
</a>
</g>
<g id="a_node4_32"><a xlink:href="StackInspector.ipynb" xlink:title="search_frame(self, name: str, frame: Optional[frame] = None) &#45;&gt; Tuple[Optional[frame], Optional[Callable]]:&#10;Return a pair (`frame`, `item`)&#10;in which the function `name` is defined as `item`.">
<text text-anchor="start" x="84.5" y="-530" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">search_frame()</text>
</a>
</g>
<g id="a_node4_33"><a xlink:href="StackInspector.ipynb" xlink:title="search_func(self, name: str, frame: Optional[frame] = None) &#45;&gt; Optional[Callable]:&#10;Search in callers for a definition of the function `name`">
<text text-anchor="start" x="84.5" y="-519" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">search_func()</text>
</a>
</g>
<g id="a_node4_34"><a xlink:href="StackInspector.ipynb" xlink:title="unknown(self) &#45;&gt; None">
<text text-anchor="start" x="84.5" y="-508" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">unknown()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CoverageCollector&#45;&gt;StackInspector -->
<g id="edge4" class="edge">
<title>CoverageCollector&#45;&gt;StackInspector</title>
<path fill="none" stroke="black" d="M195.76,-86.6C197.34,-162.69 197.56,-327.92 175.5,-465 174.11,-473.61 172.33,-482.48 170.31,-491.32"/>
<polygon fill="none" stroke="black" points="166.86,-490.73 167.94,-501.27 173.66,-492.35 166.86,-490.73"/>
</g>
<!-- Tracer -->
<g id="node3" class="node">
<title>Tracer</title>
<g id="a_node3"><a xlink:href="Tracer.ipynb" xlink:title="class Tracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="11,-345.5 11,-464.5 166,-464.5 166,-345.5 11,-345.5"/>
<text text-anchor="start" x="69" y="-450.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Tracer</text>
<polyline fill="none" stroke="black" points="11,-441.5 166,-441.5 "/>
<g id="a_node3_35"><a xlink:href="#" xlink:title="Tracer">
<g id="a_node3_36"><a xlink:href="Tracer.ipynb" xlink:title="__enter__(self) &#45;&gt; Any:&#10;Called at begin of `with` block. Turn tracing on.">
<text text-anchor="start" x="19.5" y="-430.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__enter__()</text>
</a>
</g>
<g id="a_node3_37"><a xlink:href="Tracer.ipynb" xlink:title="__exit__(self, exc_tp: Type, exc_value: BaseException, exc_traceback: traceback) &#45;&gt; Optional[bool]:&#10;Called at end of `with` block. Turn tracing off.&#10;Return `None` if ok, not `None` if internal error.">
<text text-anchor="start" x="19.5" y="-419.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__exit__()</text>
</a>
</g>
<g id="a_node3_38"><a xlink:href="Tracer.ipynb" xlink:title="__init__(self, file: &lt;class &#39;TextIO&#39;&gt; = &lt;ipykernel.iostream.OutStream object at 0x1085e3820&gt;) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text text-anchor="start" x="19.5" y="-408.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node3_39"><a xlink:href="Tracer.ipynb" xlink:title="changed_vars(self, new_vars: Dict[str, Any]) &#45;&gt; Dict[str, Any]:&#10;Track changed variables, based on `new_vars` observed.">
<text text-anchor="start" x="19.5" y="-397.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">changed_vars()</text>
</a>
</g>
<g id="a_node3_40"><a xlink:href="Tracer.ipynb" xlink:title="_traceit(self, frame: frame, event: str, arg: Any) &#45;&gt; Optional[Callable]:&#10;Internal tracing function.">
<text text-anchor="start" x="19.5" y="-385.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">_traceit()</text>
</a>
</g>
<g id="a_node3_41"><a xlink:href="Tracer.ipynb" xlink:title="log(self, *objects: Any, sep: str = &#39; &#39;, end: str = &#39;\n&#39;, flush: bool = True) &#45;&gt; None:&#10;Like `print()`, but always sending to `file` given at initialization,&#10;and flushing by default.">
<text text-anchor="start" x="19.5" y="-374.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">log()</text>
</a>
</g>
<g id="a_node3_42"><a xlink:href="Tracer.ipynb" xlink:title="print_debugger_status(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Show current source line and changed vars">
<text text-anchor="start" x="19.5" y="-363.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">print_debugger_status()</text>
</a>
</g>
<g id="a_node3_43"><a xlink:href="Tracer.ipynb" xlink:title="traceit(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Tracing function; called at every line. To be overloaded in subclasses.">
<text text-anchor="start" x="19.5" y="-353.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Collector&#45;&gt;Tracer -->
<g id="edge2" class="edge">
<title>Collector&#45;&gt;Tracer</title>
<path fill="none" stroke="black" d="M88.5,-308.58C88.5,-317.56 88.5,-326.56 88.5,-335.26"/>
<polygon fill="none" stroke="black" points="85,-335.31 88.5,-345.31 92,-335.31 85,-335.31"/>
</g>
<!-- Tracer&#45;&gt;StackInspector -->
<g id="edge3" class="edge">
<title>Tracer&#45;&gt;StackInspector</title>
<path fill="none" stroke="black" d="M105.85,-464.94C108.38,-473.52 111.04,-482.54 113.71,-491.61"/>
<polygon fill="none" stroke="black" points="110.43,-492.86 116.61,-501.46 117.14,-490.88 110.43,-492.86"/>
</g>
<!-- ValueCollector -->
<g id="node5" class="node">
<title>ValueCollector</title>
<g id="a_node5"><a xlink:href="#" xlink:title="class ValueCollector:&#10;&quot;A class to collect local variables and their values.">
<polygon fill="none" stroke="black" points="0,-11.5 0,-75.5 109,-75.5 109,-11.5 0,-11.5"/>
<text text-anchor="start" x="8" y="-61.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">ValueCollector</text>
<polyline fill="none" stroke="black" points="0,-52.5 109,-52.5 "/>
<g id="a_node5_44"><a xlink:href="#" xlink:title="ValueCollector">
<g id="a_node5_45"><a xlink:href="#" xlink:title="__init__(self) &#45;&gt; None:&#10;Constructor.">
<text text-anchor="start" x="24.5" y="-41" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node5_46"><a xlink:href="#" xlink:title="events(self) &#45;&gt; Set[str]:&#10;A set of (variable, value) pairs observed">
<text text-anchor="start" x="24.5" y="-30" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">events()</text>
</a>
</g>
<g id="a_node5_47"><a xlink:href="#" xlink:title="collect(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Collector function. To be overloaded in subclasses.">
<text text-anchor="start" x="24.5" y="-19" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">collect()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- ValueCollector&#45;&gt;Collector -->
<g id="edge5" class="edge">
<title>ValueCollector&#45;&gt;Collector</title>
<path fill="none" stroke="black" d="M60.74,-75.77C62.93,-86.76 65.52,-99.77 68.23,-113.37"/>
<polygon fill="none" stroke="black" points="64.84,-114.23 70.22,-123.35 71.7,-112.86 64.84,-114.23"/>
</g>
<!-- Legend -->
<g id="node6" class="node">
<title>Legend</title>
<text text-anchor="start" x="279.5" y="-61" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text text-anchor="start" x="279.5" y="-51" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="286.5" y="-51" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text text-anchor="start" x="279.5" y="-41" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="286.5" y="-41" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text text-anchor="start" x="279.5" y="-31" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="286.5" y="-31" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text text-anchor="start" x="279.5" y="-21.8" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
