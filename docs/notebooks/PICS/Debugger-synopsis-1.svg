<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.0.2 (20221119.0110)
 -->
<!-- Pages: 1 -->
<svg width="293pt" height="396pt"
 viewBox="0.00 0.00 292.50 396.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 392)">
<g id="a_graph0"><a xlink:title="Debugger class hierarchy">
<polygon fill="white" stroke="none" points="-4,4 -4,-392 288.5,-392 288.5,4 -4,4"/>
</a>
</g>
<!-- Debugger -->
<g id="node1" class="node">
<title>Debugger</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class Debugger:&#10;Interactive Debugger">
<polygon fill="none" stroke="black" points="21,-0.5 21,-196.5 146,-196.5 146,-0.5 21,-0.5"/>
<text text-anchor="start" x="51.5" y="-182.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Debugger</text>
<polyline fill="none" stroke="black" points="21,-173.5 146,-173.5"/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="Debugger">
<g id="a_node1_1"><a xlink:href="#" xlink:title="__init__(self, *, file: &lt;class &#39;TextIO&#39;&gt; = &lt;ipykernel.iostream.OutStream object&gt;) &#45;&gt; None:&#10;Create a new interactive debugger.">
<text text-anchor="start" x="29.5" y="-162" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="break_command(self, arg: str = &#39;&#39;) &#45;&gt; None:&#10;Set a breakoint in given line. If no line is given, list all breakpoints">
<text text-anchor="start" x="29.5" y="-150" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">break_command()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="command_method(self, command: str) &#45;&gt; Optional[Callable[[str], NoneType]]:&#10;Convert `command` into the method to be called.&#10;If the method is not found, return `None` instead.">
<text text-anchor="start" x="29.5" y="-139" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">command_method()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="commands(self) &#45;&gt; List[str]:&#10;Return a list of commands">
<text text-anchor="start" x="29.5" y="-128" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">commands()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="continue_command(self, arg: str = &#39;&#39;) &#45;&gt; None:&#10;Resume execution">
<text text-anchor="start" x="29.5" y="-117" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">continue_command()</text>
</a>
</g>
<g id="a_node1_6"><a xlink:href="#" xlink:title="delete_command(self, arg: str = &#39;&#39;) &#45;&gt; None:&#10;Delete breakoint in line given by `arg`.&#10;Without given line, clear all breakpoints">
<text text-anchor="start" x="29.5" y="-106" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">delete_command()</text>
</a>
</g>
<g id="a_node1_7"><a xlink:href="#" xlink:title="execute(self, command: str) &#45;&gt; None:&#10;Execute `command`">
<text text-anchor="start" x="29.5" y="-95" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">execute()</text>
</a>
</g>
<g id="a_node1_8"><a xlink:href="#" xlink:title="help_command(self, command: str = &#39;&#39;) &#45;&gt; None:&#10;Give help on given `command`. If no command is given, give help on all">
<text text-anchor="start" x="29.5" y="-84" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">help_command()</text>
</a>
</g>
<g id="a_node1_9"><a xlink:href="#" xlink:title="interaction_loop(self) &#45;&gt; None:&#10;Interact with the user">
<text text-anchor="start" x="29.5" y="-73" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">interaction_loop()</text>
</a>
</g>
<g id="a_node1_10"><a xlink:href="#" xlink:title="list_command(self, arg: str = &#39;&#39;) &#45;&gt; None:&#10;Show current function. If `arg` is given, show its source code.">
<text text-anchor="start" x="29.5" y="-62" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">list_command()</text>
</a>
</g>
<g id="a_node1_11"><a xlink:href="#" xlink:title="print_command(self, arg: str = &#39;&#39;) &#45;&gt; None:&#10;Print an expression. If no expression is given, print all variables">
<text text-anchor="start" x="29.5" y="-51" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">print_command()</text>
</a>
</g>
<g id="a_node1_12"><a xlink:href="#" xlink:title="quit_command(self, arg: str = &#39;&#39;) &#45;&gt; None:&#10;Finish execution">
<text text-anchor="start" x="29.5" y="-40" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">quit_command()</text>
</a>
</g>
<g id="a_node1_13"><a xlink:href="#" xlink:title="step_command(self, arg: str = &#39;&#39;) &#45;&gt; None:&#10;Execute up to the next line">
<text text-anchor="start" x="29.5" y="-29" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">step_command()</text>
</a>
</g>
<g id="a_node1_14"><a xlink:href="#" xlink:title="stop_here(self) &#45;&gt; bool:&#10;Return True if we should stop">
<text text-anchor="start" x="29.5" y="-18" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">stop_here()</text>
</a>
</g>
<g id="a_node1_15"><a xlink:href="#" xlink:title="traceit(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Tracing function; called at every line. To be overloaded in subclasses.">
<text text-anchor="start" x="29.5" y="-8" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Tracer -->
<g id="node2" class="node">
<title>Tracer</title>
<g id="a_node2"><a xlink:href="Tracer.ipynb" xlink:title="class Tracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="42,-233.5 42,-308.5 125,-308.5 125,-233.5 42,-233.5"/>
<text text-anchor="start" x="63.5" y="-294.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Tracer</text>
<polyline fill="none" stroke="black" points="42,-285.5 125,-285.5"/>
<g id="a_node2_16"><a xlink:href="#" xlink:title="Tracer">
<g id="a_node2_17"><a xlink:href="Tracer.ipynb" xlink:title="__enter__(self) &#45;&gt; Any:&#10;Called at begin of `with` block. Turn tracing on.">
<text text-anchor="start" x="50.5" y="-274.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__enter__()</text>
</a>
</g>
<g id="a_node2_18"><a xlink:href="Tracer.ipynb" xlink:title="__exit__(self, exc_tp: Type, exc_value: BaseException, exc_traceback: traceback) &#45;&gt; Optional[bool]:&#10;Called at end of `with` block. Turn tracing off.&#10;Return `None` if ok, not `None` if internal error.">
<text text-anchor="start" x="50.5" y="-263.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__exit__()</text>
</a>
</g>
<g id="a_node2_19"><a xlink:href="Tracer.ipynb" xlink:title="__init__(self, file: &lt;class &#39;TextIO&#39;&gt; = &lt;ipykernel.iostream.OutStream object&gt;) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text text-anchor="start" x="50.5" y="-252.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node2_20"><a xlink:href="Tracer.ipynb" xlink:title="traceit(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Tracing function; called at every line. To be overloaded in subclasses.">
<text text-anchor="start" x="50.5" y="-241.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Debugger&#45;&gt;Tracer -->
<g id="edge1" class="edge">
<title>Debugger&#45;&gt;Tracer</title>
<path fill="none" stroke="black" d="M83.5,-196.21C83.5,-205.3 83.5,-214.22 83.5,-222.53"/>
<polygon fill="none" stroke="black" points="80,-222.33 83.5,-232.33 87,-222.33 80,-222.33"/>
</g>
<!-- StackInspector -->
<g id="node3" class="node">
<title>StackInspector</title>
<g id="a_node3"><a xlink:href="StackInspector.ipynb" xlink:title="class StackInspector:&#10;Provide functions to inspect the stack">
<polygon fill="none" stroke="black" points="0,-345.5 0,-387.5 167,-387.5 167,-345.5 0,-345.5"/>
<text text-anchor="start" x="36.5" y="-373.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">StackInspector</text>
<polyline fill="none" stroke="black" points="0,-364.5 167,-364.5"/>
<g id="a_node3_21"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node3_22"><a xlink:href="StackInspector.ipynb" xlink:title="_generated_function_cache = {}">
<text text-anchor="start" x="8.5" y="-352" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">_generated_function_cache</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Tracer&#45;&gt;StackInspector -->
<g id="edge2" class="edge">
<title>Tracer&#45;&gt;StackInspector</title>
<path fill="none" stroke="black" d="M83.5,-308.42C83.5,-316.89 83.5,-325.84 83.5,-334.08"/>
<polygon fill="none" stroke="black" points="80,-333.99 83.5,-343.99 87,-333.99 80,-333.99"/>
</g>
<!-- Legend -->
<g id="node4" class="node">
<title>Legend</title>
<text text-anchor="start" x="164.5" y="-116" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text text-anchor="start" x="164.5" y="-106" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="171.5" y="-106" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text text-anchor="start" x="164.5" y="-96" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="171.5" y="-96" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text text-anchor="start" x="164.5" y="-86" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="171.5" y="-86" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text text-anchor="start" x="164.5" y="-76.8" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
